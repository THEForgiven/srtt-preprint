name: reproduce
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  run-repro:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install minimal deps (CI)
        run: |
          printf "numpy\nscipy\nmatplotlib\npandas\n" > env/requirements-ci.txt
          pip install --prefer-binary -r env/requirements-ci.txt
          pip install --only-binary=:all: numpy scipy || true

      - name: Sanity: files present
        run: |
          ls -l src/repro_batch.py data-min/interesting_stream.npy data-min/custom_D.npy

      - name: Run headless repro
        run: |
          set -euxo pipefail
          mkdir -p outputs
          python -V | tee outputs/env_versions.txt
          python -c "import numpy as n, scipy as s; print('NumPy', n.__version__); print('SciPy', s.__version__)" | tee -a outputs/env_versions.txt
          python src/repro_batch.py \
            --x data-min/interesting_stream.npy \
            --dict custom --D data-min/custom_D.npy \
            --m 1400 --lam 0.02 --nu phase --seed 12345 \
            --out outputs |& tee outputs/repro_log.txt
          pip freeze > outputs/pip_freeze.txt

      - name: Show repro log tail
        if: always()
        run: |
          echo "---- repro_log.txt (tail) ----"
          tail -n 100 outputs/repro_log.txt || true
          echo "---- env_versions.txt ----"
          cat outputs/env_versions.txt || true
          echo "---- listing outputs/ ----"
          ls -la outputs || true

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: srtt-repro-artifacts
          path: outputs/**
          if-no-files-found: warn
